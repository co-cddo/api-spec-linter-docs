---
title: Semantic Versioning
---

# Version must use semantic versioning

## Description
Releasing new versions of an OpenAPI document can cause issues for consumers. The semantic versioning specification outlines rules which are designed to make it clear to consumers if a new version contains a breaking change.

## Example
Semantic versioning numbers should have a major, minor and patch number. The following is an example of how an incorrect version number could look in your API definition (the following is missing a patch number):

```yaml
openapi: 3.1.0
info:
  title: ''
  version: '1.0'
paths: {}
```


## Remediation
The following is how a correctly versioned OpenAPI document could look:

```yaml
openapi: 3.1.0
info:
  title: ''
  version: '1.0.0'
paths: {}
```
